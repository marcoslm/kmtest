[ClassId("6539E244-D5DD-4052-85A1-55D376787C38")]
[InterfaceId("A1AC5AE6-8F40-4F24-9BAD-3CA448C2CDCA")]
[COMCreatable(False)]
Private Class BaseControlWindowless

    Implements BaseControlRectDockable Via BaseControlRectDockable
 
    [Description("Indicates if the user can use the TAB key to focus on this control at runtime")]
    [Serialize(True, "TabStop")]
        Private TabStopINIT As Boolean = True
    [Description("Adjusts the TAB key order of this control at runtime")]
    [Serialize(True, "TabIndex")]
        Private TabIndexINIT As Long
    [Description("")]
    [Serialize(True, "Visible")]
        Public VisibleINIT As Boolean = True
        
    [Serialize(True, "DragIcon")]
    [CustomDesigner("designer_PictureBytes")]
    [Description("")]
        Private ReadOnly DragIconINIT() As Byte
    [Serialize(True, "DragMode")]
        Private DragModeINIT As VBRUN.DragModeConstants
    
    Sub New(ByVal ControlType As ControlTypeConstants)
        Set Me.BaseControlRectDockable = New BaseControlRectDockable(ControlType)
    End Sub

    Friend Function CreateRootWindowElement(ByVal _ControlContext As stdole.IUnknown, _
                                                ByRef InitData As WindowCreationData) As WindowElement
        With CType(Of WinNativeFormsBASE.BaseControlInfo)(Me.InternalBaseControlInfoPtrX)
            .WindowlessVisible = Me.VisibleINIT
            .DragMode = Me.DragModeINIT
            .TabStop = Me.TabStopINIT
            .HasTabIndex = True
            .TabIndex = Me.TabIndexINIT
        End With
        
        InitData.BaseControlInfoPtr = InternalBaseControlBeforeCreateRootWindow(InitData)
        Set Me.ControlContext = CType(Of WindowsControlContext)(_ControlContext) ' FIXME passed as IUnknown to prevent COM exposure of type
        Set Me.RootWindowElementBase = CType(Of WindowElement)(Me.ControlContext.CreateWindowElement(InitData))
        Return Me.RootWindowElementBase
    End Function
        
    [Serialize(False)]
    Property Get Visible() As Boolean
        Return CType(Of WinNativeFormsBASE.BaseControlInfo)(Me.InternalBaseControlInfoPtrX).WindowlessVisible
    End Property
        
    [Serialize(False)]
    Property Let Visible(ByVal Value As Boolean)
        CType(Of WinNativeFormsBASE.BaseControlInfo)(Me.InternalBaseControlInfoPtrX).WindowlessVisible = Value
        WindowlessRefresh()
    End Property
    
    Public Sub Drag([TypeHint(DragConstants)] Optional ByVal Action As Variant)
        CommonDrag(Action)
    End Sub
    
    Public Sub Refresh()
        WindowlessRefresh()
    End Sub
    
    Public Sub ZOrder([TypeHint(ZOrderConstants)] Optional ByVal Position As Variant)
        CommonZOrderWindowless(Position, Me.ControlContext)
    End Sub
    
    Friend Sub WindowlessRefresh()
        Me.ControlContext.WindowlessRefresh()
    End Sub
    
    [Serialize(False)]
    Public Property Get DragMode() As DragModeConstants
        Return CType(Of WinNativeFormsBASE.BaseControlInfo)(Me.InternalBaseControlInfoPtrX).DragMode
    End Property
    
    [Serialize(False)]
    Public Property Let DragMode(ByVal Value As DragModeConstants)
        CType(Of WinNativeFormsBASE.BaseControlInfo)(Me.InternalBaseControlInfoPtrX).DragMode = Value
    End Property
    
    [Serialize(False)]
    [DispId(-854)]
    Public Property Get TabStop() As Boolean
        Return CType(Of WinNativeFormsBASE.BaseControlInfo)(Me.InternalBaseControlInfoPtrX).TabStop
    End Property
    
    [Serialize(False)]
    [DispId(-854)]
    Public Property Let TabStop(ByVal Value As Boolean)
        CType(Of WinNativeFormsBASE.BaseControlInfo)(Me.InternalBaseControlInfoPtrX).TabStop = Value
    End Property
    
    [Serialize(False)]
    Public Property Get TabIndex() As Long
        Return CType(Of WinNativeFormsBASE.BaseControlInfo)(Me.InternalBaseControlInfoPtrX).TabIndex
    End Property
    
    [Serialize(False)]
    Public Property Let TabIndex(ByVal Value As Long)
        CType(Of WinNativeFormsBASE.BaseControlInfo)(Me.InternalBaseControlInfoPtrX).TabIndex = Value
    End Property
    
    [Serialize(False)]
    Public Property Get DragIcon() As StdPicture
        Return CType(Of BaseControlInfo)(Me.InternalBaseControlInfoPtrX).DragIcon
    End Property

    [Serialize(False)]
    Public Property Set DragIcon(Value As StdPicture)
        Set CType(Of BaseControlInfo)(Me.InternalBaseControlInfoPtrX).DragIcon = Value
    End Property

    [Serialize(False)]
    Public Property Let DragIcon(Value As StdPicture)
        Set CType(Of BaseControlInfo)(Me.InternalBaseControlInfoPtrX).DragIcon = Value
    End Property
End Class