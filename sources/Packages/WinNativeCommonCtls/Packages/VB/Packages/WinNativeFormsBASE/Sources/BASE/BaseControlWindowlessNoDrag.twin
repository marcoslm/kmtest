[ClassId("02EEE069-6238-46F6-B484-E542D719FB7C")]
[InterfaceId("8BEA69BB-ADD9-4D92-908D-3DB594FA3437")]
[COMCreatable(False)]
Private Class BaseControlWindowlessNoDrag

    Implements BaseControlRectDockable Via BaseControlRectDockable

    [Description("Indicates if the user can use the TAB key to focus on this control at runtime")]
    [Serialize(True, "TabStop")]
        Private TabStopINIT As Boolean = True
    [Description("Adjusts the TAB key order of this control at runtime")]
    [Serialize(True, "TabIndex")]
        Private TabIndexINIT As Long
    [Description("")]
    [Serialize(True, "Visible")]
        Private VisibleINIT As Boolean = True
        
    Sub New(ByVal ControlType As ControlTypeConstants)
        Set Me.BaseControlRectDockable = New BaseControlRectDockable(ControlType)
    End Sub

    Friend Function CreateRootWindowElement(ByVal _ControlContext As stdole.IUnknown, _
                                                ByRef InitData As WindowCreationData) As WindowElement
        With CType(Of WinNativeFormsBASE.BaseControlInfo)(Me.InternalBaseControlInfoPtrX)
            .WindowlessVisible = Me.VisibleINIT
            .TabStop = Me.TabStopINIT
            .HasTabIndex = True
            .TabIndex = Me.TabIndexINIT
        End With
        InitData.BaseControlInfoPtr = InternalBaseControlBeforeCreateRootWindow(InitData)
        Set Me.ControlContext = CType(Of WindowsControlContext)(_ControlContext) ' FIXME passed as IUnknown to prevent COM exposure of type
        Set Me.RootWindowElementBase = CType(Of WindowElement)(Me.ControlContext.CreateWindowElement(InitData))
        Return Me.RootWindowElementBase
    End Function
    
    Public Sub Refresh()
        WindowlessRefresh()
    End Sub
    
    Public Sub ZOrder([TypeHint(ZOrderConstants)] Optional ByVal Position As Variant)
        CommonZOrderWindowless(Position, Me.ControlContext)
    End Sub
    
    [Serialize(False)]
    Property Get Visible() As Boolean
        Return CType(Of WinNativeFormsBASE.BaseControlInfo)(Me.InternalBaseControlInfoPtrX).WindowlessVisible
    End Property
        
    [Serialize(False)]
    Property Let Visible(ByVal Value As Boolean)
        CType(Of WinNativeFormsBASE.BaseControlInfo)(Me.InternalBaseControlInfoPtrX).WindowlessVisible = Value
        WindowlessRefresh()
    End Property
    
    [Serialize(False)]
    [DispId(-854)]
    Public Property Get TabStop() As Boolean
        Return CType(Of WinNativeFormsBASE.BaseControlInfo)(Me.InternalBaseControlInfoPtrX).TabStop
    End Property
    
    [Serialize(False)]
    [DispId(-854)]
    Public Property Let TabStop(ByVal Value As Boolean)
        CType(Of WinNativeFormsBASE.BaseControlInfo)(Me.InternalBaseControlInfoPtrX).TabStop = Value
    End Property
    
    [Serialize(False)]
    Public Property Get TabIndex() As Long
        Return CType(Of WinNativeFormsBASE.BaseControlInfo)(Me.InternalBaseControlInfoPtrX).TabIndex
    End Property
    
    [Serialize(False)]
    Public Property Let TabIndex(ByVal Value As Long)
        CType(Of WinNativeFormsBASE.BaseControlInfo)(Me.InternalBaseControlInfoPtrX).TabIndex = Value
    End Property
        
End Class