Module Financial
     
    [PreserveSig(False), UseGetLastError(False), DLLStackCheck(False), ConstantFoldable]
    [Description("Calculates the depreciation of an asset for a specified period using the double-declining balance method.  " & vbCrLf & _
                    "### Syntax" & vbCrLf & _
                    "`result = DDB(Cost, Salvage, Life, Period, [Factor])`" & vbCrLf & _
                    "### Parameters" & vbCrLf & _
                    "`Cost` (Double): The initial cost of the asset.  " & vbCrLf & _
                    "`Salvage` (Double): The value of the asset at the end of depreciation.  " & vbCrLf & _
                    "`Life` (Double): The number of periods over which the asset is being depreciated.  " & vbCrLf & _
                    "`Period` (Double): The period for which you want to calculate the depreciation.  " & vbCrLf & _
                    "`Factor` (Variant): Optional. The rate at which the balance declines. If omitted, 2 (double-declining method) is assumed.  " & vbCrLf & _
                    "### Return value" & vbCrLf & _
                    "A Double representing the depreciation amount for the period.  " & vbCrLf & _
                    "### Example" & vbCrLf & _
                    "```vb" & vbCrLf & _
                    "Dim depreciation As Double" & vbCrLf & _
                    "depreciation = DDB(1000, 100, 5, 1)" & vbCrLf & _
                    "```" & vbCrLf & _
                    "This example calculates the depreciation of an asset with an initial cost of $1000, salvage value of $100, over 5 years, for the first period.")]
    Public DeclareWide PtrSafe Function DDB Lib "<financial>" Alias "#1" (ByVal Cost As Double, ByVal Salvage As Double, ByVal Life As Double, ByVal Period As Double, Optional ByRef Factor As Variant) As Double
    
    [PreserveSig(False), UseGetLastError(False), DLLStackCheck(False), ConstantFoldable]
    [Description("Calculates the future value of an investment based on periodic, constant payments and a constant interest rate.  " & vbCrLf & _
                    "### Syntax" & vbCrLf & _
                    "`result = FV(Rate, NPer, Pmt, [PV], [Type])`" & vbCrLf & _
                    "### Parameters" & vbCrLf & _
                    "`Rate` (Double): The interest rate per period.  " & vbCrLf & _
                    "`NPer` (Double): The total number of payment periods in an investment.  " & vbCrLf & _
                    "`Pmt` (Double): The payment made each period; it cannot change over the life of the investment.  " & vbCrLf & _
                    "`PV` (Variant): Optional. The present value, or the total amount that a series of future payments is worth now; also known as the principal.  " & vbCrLf & _
                    "`Type` (Variant): Optional. The timing of the payment. 0 indicates at the end of the period; 1 indicates at the beginning.  " & vbCrLf & _
                    "### Return value" & vbCrLf & _
                    "A Double representing the future value of the investment.  " & vbCrLf & _
                    "### Example" & vbCrLf & _
                    "```vb" & vbCrLf & _
                    "Dim futureValue As Double" & vbCrLf & _
                    "futureValue = FV(0.05/12, 10*12, -100, -1000, 0)" & vbCrLf & _
                    "```" & vbCrLf & _
                    "This calculates the future value of a 10-year investment with monthly payments of $100, a monthly interest rate of 0.05%, and an initial investment of $1000.")]
    Public DeclareWide PtrSafe Function FV Lib "<financial>" Alias "#2" (ByVal Rate As Double, ByVal NPer As Double, ByVal Pmt As Double, Optional ByRef PV As Variant, Optional ByRef Type As Variant) As Double
    
    [PreserveSig(False), UseGetLastError(False), DLLStackCheck(False), ConstantFoldable]
    [Description("Calculates the payment for a loan based on constant payments and a constant interest rate.  " & vbCrLf & _
                    "### Syntax" & vbCrLf & _
                    "`result = Pmt(Rate, NPer, PV, [FV], [Due])`" & vbCrLf & _
                    "### Parameters" & vbCrLf & _
                    "`Rate` (Double): The interest rate for each period.  " & vbCrLf & _
                    "`NPer` (Double): The total number of payments for the loan.  " & vbCrLf & _
                    "`PV` (Double): The present value, or the total amount that a series of future payments is currently worth.  " & vbCrLf & _
                    "`FV` (Variant): Optional. The future value, or a cash balance you want to attain after the last payment is made.  " & vbCrLf & _
                    "`Due` (Variant): Optional. Specifies when the payment is due. 0 or omitted for end of period, 1 for beginning.  " & vbCrLf & _
                    "### Return value" & vbCrLf & _
                    "A Double representing the payment amount per period.  " & vbCrLf & _
                    "### Example" & vbCrLf & _
                    "```vb" & vbCrLf & _
                    "Dim loanPayment As Double" & vbCrLf & _
                    "loanPayment = Pmt(0.07/12, 360, 200000)" & vbCrLf & _
                    "```" & vbCrLf & _
                    "This calculates the monthly payment for a 30-year loan with an annual interest rate of 7% and a principal of $200,000.")]
    Public DeclareWide PtrSafe Function Pmt Lib "<financial>" Alias "#3" (ByVal Rate As Double, ByVal NPer As Double, ByVal PV As Double, Optional ByRef FV As Variant, Optional ByRef Due As Variant) As Double
    
    [PreserveSig(False), UseGetLastError(False), DLLStackCheck(False), ConstantFoldable]
    [Description("Calculates the interest payment for a given period of an investment based on periodic, constant payments and a constant interest rate.  " & vbCrLf & _
                    "### Syntax" & vbCrLf & _
                    "`result = IPmt(Rate, Per, NPer, PV, [FV], [Due])`" & vbCrLf & _
                    "### Parameters" & vbCrLf & _
                    "`Rate` (Double): The interest rate per period.  " & vbCrLf & _
                    "`Per` (Double): The period for which you want to find the interest and must be in the range 1 to NPer.  " & vbCrLf & _
                    "`NPer` (Double): The total number of payment periods in an investment.  " & vbCrLf & _
                    "`PV` (Double): The present value, or the total amount that a series of future payments is worth now.  " & vbCrLf & _
                    "`FV` (Variant): Optional. The future value, or a cash balance you want to attain after the last payment is made.  " & vbCrLf & _
                    "`Due` (Variant): Optional. Specifies when the payment is due. 0 or omitted for end of period, 1 for beginning.  " & vbCrLf & _
                    "### Return value" & vbCrLf & _
                    "A Double representing the interest portion of a payment.  " & vbCrLf & _
                    "### Example" & vbCrLf & _
                    "```vb" & vbCrLf & _
                    "Dim interestPayment As Double" & vbCrLf & _
                    "interestPayment = IPmt(0.07/12, 1, 360, 200000)" & vbCrLf & _
                    "```" & vbCrLf & _
                    "This calculates the interest payment for the first month of a 30-year loan with an annual interest rate of 7% and a principal of $200,000.")]
    Public DeclareWide PtrSafe Function IPmt Lib "<financial>" Alias "#4" (ByVal Rate As Double, ByVal Per As Double, ByVal NPer As Double, ByVal PV As Double, Optional ByRef FV As Variant, Optional ByRef Due As Variant) As Double
    
    [PreserveSig(False), UseGetLastError(False), DLLStackCheck(False), ConstantFoldable]
    [Description("Calculates the principal payment for a given period for an investment based on periodic, constant payments and a constant interest rate.  " & vbCrLf & _
                    "### Syntax" & vbCrLf & _
                    "`result = PPmt(Rate, Per, NPer, PV, [FV], [Due])`" & vbCrLf & _
                    "### Parameters" & vbCrLf & _
                    "`Rate` (Double): The interest rate per period.  " & vbCrLf & _
                    "`Per` (Double): The period for which you want to find the principal payment and must be in the range 1 to NPer.  " & vbCrLf & _
                    "`NPer` (Double): The total number of payment periods in an investment.  " & vbCrLf & _
                    "`PV` (Double): The present value, or the total amount that a series of future payments is worth now.  " & vbCrLf & _
                    "`FV` (Variant): Optional. The future value, or a cash balance you want to attain after the last payment is made.  " & vbCrLf & _
                    "`Due` (Variant): Optional. Specifies when the payment is due. 0 or omitted for end of period, 1 for beginning.  " & vbCrLf & _
                    "### Return value" & vbCrLf & _
                    "A Double representing the principal portion of a payment for a given period.  " & vbCrLf & _
                    "### Example" & vbCrLf & _
                    "```vb" & vbCrLf & _
                    "Dim principalPayment As Double" & vbCrLf & _
                    "principalPayment = PPmt(0.07/12, 1, 360, 200000)" & vbCrLf & _
                    "```" & vbCrLf & _
                    "This calculates the principal payment for the first month of a 30-year loan with an annual interest rate of 7% and a principal of $200,000.")]
    Public DeclareWide PtrSafe Function PPmt Lib "<financial>" Alias "#5" (ByVal Rate As Double, ByVal Per As Double, ByVal NPer As Double, ByVal PV As Double, Optional ByRef FV As Variant, Optional ByRef Due As Variant) As Double
    
    [PreserveSig(False), UseGetLastError(False), DLLStackCheck(False), ConstantFoldable]
    [Description("Calculates the sum-of-years' digits depreciation of an asset for a specified period.  " & vbCrLf & _
                    "### Syntax" & vbCrLf & _
                    "`result = SYD(Cost, Salvage, Life, Period)`" & vbCrLf & _
                    "### Parameters" & vbCrLf & _
                    "`Cost` (Double): The initial cost of the asset.  " & vbCrLf & _
                    "`Salvage` (Double): The value of the asset at the end of depreciation.  " & vbCrLf & _
                    "`Life` (Double): The total number of periods over which the asset is depreciated.  " & vbCrLf & _
                    "`Period` (Double): The period for which you want to calculate the depreciation.  " & vbCrLf & _
                    "### Return value" & vbCrLf & _
                    "A Double representing the depreciation amount for the period.  " & vbCrLf & _
                    "### Example" & vbCrLf & _
                    "```vb" & vbCrLf & _
                    "Dim sydDepreciation As Double" & vbCrLf & _
                    "sydDepreciation = SYD(10000, 1000, 5, 1)" & vbCrLf & _
                    "```" & vbCrLf & _
                    "This calculates the depreciation for the first year of an asset with an initial cost of $10,000, a salvage value of $1,000, and a useful life of 5 years.")]
    Public DeclareWide PtrSafe Function SYD Lib "<financial>" Alias "#6" (ByVal Cost As Double, ByVal Salvage As Double, ByVal Life As Double, ByVal Period As Double) As Double
    
    [PreserveSig(False), UseGetLastError(False), DLLStackCheck(False), ConstantFoldable]
    [Description("Calculates the straight-line depreciation of an asset for one period.  " & vbCrLf & _
                    "### Syntax" & vbCrLf & _
                    "`result = SLN(Cost, Salvage, Life)`" & vbCrLf & _
                    "### Parameters" & vbCrLf & _
                    "`Cost` (Double): The initial cost of the asset.  " & vbCrLf & _
                    "`Salvage` (Double): The value of the asset at the end of its useful life.  " & vbCrLf & _
                    "`Life` (Double): The total number of periods over which the asset is depreciated.  " & vbCrLf & _
                    "### Return value" & vbCrLf & _
                    "A Double representing the depreciation amount per period.  " & vbCrLf & _
                    "### Example" & vbCrLf & _
                    "```vb" & vbCrLf & _
                    "Dim slnDepreciation As Double" & vbCrLf & _
                    "slnDepreciation = SLN(10000, 1000, 5)" & vbCrLf & _
                    "```" & vbCrLf & _
                    "This calculates the depreciation per year for an asset with an initial cost of $10,000, a salvage value of $1,000, and a useful life of 5 years.")]
    Public DeclareWide PtrSafe Function SLN Lib "<financial>" Alias "#7" (ByVal Cost As Double, ByVal Salvage As Double, ByVal Life As Double) As Double
    
    [PreserveSig(False), UseGetLastError(False), DLLStackCheck(False), ConstantFoldable]
    [Description("Calculates the present value of an investment: the total amount that a series of future payments is worth now.  " & vbCrLf & _
                    "### Syntax" & vbCrLf & _
                    "`result = PV(Rate, NPer, Pmt, [FV], [Due])`" & vbCrLf & _
                    "### Parameters" & vbCrLf & _
                    "`Rate` (Double): The interest rate per period.  " & vbCrLf & _
                    "`NPer` (Double): The total number of payment periods in an investment.  " & vbCrLf & _
                    "`Pmt` (Double): The payment made each period; it cannot change over the life of the investment.  " & vbCrLf & _
                    "`FV` (Variant): Optional. The future value, or a cash balance you want to attain after the last payment is made.  " & vbCrLf & _
                    "`Due` (Variant): Optional. Specifies when the payment is due. 0 or omitted for end of period, 1 for beginning.  " & vbCrLf & _
                    "### Return value" & vbCrLf & _
                    "A Double representing the present value of a series of future payments.  " & vbCrLf & _
                    "### Example" & vbCrLf & _
                    "```vb" & vbCrLf & _
                    "Dim presentValue As Double" & vbCrLf & _
                    "presentValue = PV(0.07/12, 360, -1500)" & vbCrLf & _
                    "```" & vbCrLf & _
                    "This calculates the present value of a series of monthly payments of $1,500 at an annual interest rate of 7% over 30 years.")]
    Public DeclareWide PtrSafe Function PV Lib "<financial>" Alias "#8" (ByVal Rate As Double, ByVal NPer As Double, ByVal Pmt As Double, Optional ByRef FV As Variant, Optional ByRef Due As Variant) As Double
    
    [PreserveSig(False), UseGetLastError(False), DLLStackCheck(False), ConstantFoldable]
    [Description("Calculates the internal rate of return for a series of cash flows represented by the numbers in an array.  " & vbCrLf & _
                    "### Syntax" & vbCrLf & _
                    "`result = IRR(ValueArray(), [Guess])`" & vbCrLf & _
                    "### Parameters" & vbCrLf & _
                    "`ValueArray()` (Double Array): Array or range of cash flows. The array must contain at least one negative value (a payment) and one positive value (a receipt).  " & vbCrLf & _
                    "`Guess` (Double): Optional. Your guess for what the return rate might be.  " & vbCrLf & _
                    "### Return value" & vbCrLf & _
                    "A Double representing the internal rate of return.  " & vbCrLf & _
                    "### Example" & vbCrLf & _
                    "```vb" & vbCrLf & _
                    "Dim cashFlows() As Double = {-75000, 12000, 15000, 18000, 21000, 26000}" & vbCrLf & _
                    "Dim irrValue As Double = IRR(cashFlows)" & vbCrLf & _
                    "```" & vbCrLf & _
                    "This example calculates the IRR for a series of cash flows with an initial investment of $75,000 followed by cash inflows over the next five periods.")]
    Public DeclareWide PtrSafe Function IRR Lib "<financial>" Alias "#9" (ByRef ValueArray() As Double, Optional ByVal Guess As Double) As Double
    
    [PreserveSig(False), UseGetLastError(False), DLLStackCheck(False), ConstantFoldable]
    [Description("Calculates the interest rate per period of an annuity.  " & vbCrLf & _
                    "### Syntax" & vbCrLf & _
                    "`result = Rate(NPer, Pmt, PV, [FV], [Due], [Guess])`" & vbCrLf & _
                    "### Parameters" & vbCrLf & _
                    "`NPer` (Double): The total number of payment periods in an annuity.  " & vbCrLf & _
                    "`Pmt` (Double): The payment made each period and cannot change over the life of the annuity.  " & vbCrLf & _
                    "`PV` (Double): The present value — the total amount that a series of future payments is worth now.  " & vbCrLf & _
                    "`FV` (Variant): Optional. The future value, or a cash balance you want to attain after the last payment is made.  " & vbCrLf & _
                    "`Due` (Variant): Optional. Specifies when the payments are due. 0 or omitted for end of period, 1 for beginning.  " & vbCrLf & _
                    "`Guess` (Variant): Optional. Your guess for what the rate might be.  " & vbCrLf & _
                    "### Return value" & vbCrLf & _
                    "A Double representing the interest rate per period.  " & vbCrLf & _
                    "### Example" & vbCrLf & _
                    "```vb" & vbCrLf & _
                    "Dim interestRate As Double = Rate(360, -1500, 200000)" & vbCrLf & _
                    "```" & vbCrLf & _
                    "This example calculates the monthly interest rate for a loan of $200,000 with a monthly payment of $1,500 over 30 years.")]
    Public DeclareWide PtrSafe Function Rate Lib "<financial>" Alias "#10" (ByVal NPer As Double, ByVal Pmt As Double, ByVal PV As Double, Optional ByRef FV As Variant, Optional ByRef Due As Variant, Optional ByRef Guess As Variant) As Double
    
    [PreserveSig(False), UseGetLastError(False), DLLStackCheck(False), ConstantFoldable]
    [Description("Calculates the net present value of an investment by using a discount rate and a series of future payments (negative values) and income (positive values).  " & vbCrLf & _
                    "### Syntax" & vbCrLf & _
                    "`result = NPV(Rate, ValueArray())`" & vbCrLf & _
                    "### Parameters" & vbCrLf & _
                    "`Rate` (Double): The rate of discount over the length of one period.  " & vbCrLf & _
                    "`ValueArray()` (Double Array): An array or range containing the income and payments associated with the investment.  " & vbCrLf & _
                    "### Return value" & vbCrLf & _
                    "A Double representing the net present value of an investment.  " & vbCrLf & _
                    "### Example" & vbCrLf & _
                    "```vb" & vbCrLf & _
                    "Dim cashFlows() As Double = {-50000, 8000, 9200, 10000, 12000, 14000}" & vbCrLf & _
                    "Dim npvValue As Double = NPV(0.1, cashFlows)" & vbCrLf & _
                    "```" & vbCrLf & _
                    "This example calculates the NPV for an investment with an initial outlay of $50,000 and a series of cash inflows over the next five periods at a discount rate of 10%.")]
    Public DeclareWide PtrSafe Function NPV Lib "<financial>" Alias "#11" (ByVal Rate As Double, ByRef ValueArray() As Double) As Double
    
    [PreserveSig(False), UseGetLastError(False), DLLStackCheck(False), ConstantFoldable]
    [Description("Calculates the modified internal rate of return for a series of periodic cash flows, considering both the cost of the investment and the interest received on reinvestment of cash.  " & vbCrLf & _
                    "### Syntax" & vbCrLf & _
                    "`result = MIRR(ValueArray(), FinanceRate, ReinvestRate)`" & vbCrLf & _
                    "### Parameters" & vbCrLf & _
                    "`ValueArray()` (Double Array): An array or range of cash flows associated with the investment.  " & vbCrLf & _
                    "`FinanceRate` (Double): The interest rate paid on the funds invested.  " & vbCrLf & _
                    "`ReinvestRate` (Double): The interest rate received on the reinvestment of cash.  " & vbCrLf & _
                    "### Return value" & vbCrLf & _
                    "A Double representing the modified internal rate of return.  " & vbCrLf & _
                    "### Example" & vbCrLf & _
                    "```vb" & vbCrLf & _
                    "Dim investment() As Double = {-75000, 12000, 15000, 18000, 21000, 26000}" & vbCrLf & _
                    "Dim mirrValue As Double = MIRR(investment, 0.05, 0.07)" & vbCrLf & _
                    "```" & vbCrLf & _
                    "This calculates the MIRR for a series of cash flows with an initial investment of $75,000 and subsequent inflows, assuming a finance rate of 5% and a reinvestment rate of 7%.")]
    Public DeclareWide PtrSafe Function MIRR Lib "<financial>" Alias "#12" (ByRef ValueArray() As Double, ByVal FinanceRate As Double, ByVal ReinvestRate As Double) As Double
    
    [PreserveSig(False), UseGetLastError(False), DLLStackCheck(False), ConstantFoldable]
    [Description("Calculates the number of periods for an investment based on periodic, constant payments and a constant interest rate.  " & vbCrLf & _
                    "### Syntax" & vbCrLf & _
                    "`result = NPer(Rate, Pmt, PV, [FV], [Due])`" & vbCrLf & _
                    "### Parameters" & vbCrLf & _
                    "`Rate` (Double): The interest rate per period.  " & vbCrLf & _
                    "`Pmt` (Double): The payment made each period; it cannot change over the life of the investment.  " & vbCrLf & _
                    "`PV` (Double): The present value, or the lump-sum amount that a series of future payments is worth right now.  " & vbCrLf & _
                    "`FV` (Variant): Optional. The future value, or a cash balance you want to attain after the last payment is made.  " & vbCrLf & _
                    "`Due` (Variant): Optional. Specifies when the payments are due. 0 or omitted for end of period, 1 for beginning.  " & vbCrLf & _
                    "### Return value" & vbCrLf & _
                    "A Double representing the number of periods.  " & vbCrLf & _
                    "### Example" & vbCrLf & _
                    "```vb" & vbCrLf & _
                    "Dim totalPeriods As Double = NPer(0.08/12, -200, 8000)" & vbCrLf & _
                    "```" & vbCrLf & _
                    "This example calculates the number of monthly periods it would take to pay off a loan of $8,000 with monthly payments of $200 at an annual interest rate of 8%.")]
    Public DeclareWide PtrSafe Function NPer Lib "<financial>" Alias "#13" (ByVal Rate As Double, ByVal Pmt As Double, ByVal PV As Double, Optional ByRef FV As Variant, Optional ByRef Due As Variant) As Double
     
End Module