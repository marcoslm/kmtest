Private Module Render
    Public Type BITMAP
        bmType As Long
        bmWidth As Long
        bmHeight As Long
        bmWidthBytes As Long
        bmPlanes As Integer
        bmBitsPixel As Integer
        bmBits As LongPtr
    End Type

    Private Type SAFEARRAYBOUND
        cElements As Long
        lLbound As Long
    End Type
    
    Private Type SAFEARRAY1D
        cDims As Integer
        fFeatures As Integer
        cbElements As Long
        cLocks As Long
        pvData As LongPtr
        Bounds As SAFEARRAYBOUND
    End Type

    [UseGetLastError(False), DLLStackCheck(False)]
    Private DeclareWide PtrSafe Function DrawIconEx Lib "user32" (ByVal hDC As LongPtr, ByVal xLeft As Long, ByVal yTop As Long, ByVal hicon As LongPtr, ByVal cxWidth As Long, ByVal cyWidth As Long, ByVal istepIfAniCur As Long, ByVal hbrFlickerFreeDraw As LongPtr, ByVal diFlags As Long) As Long
    
    [UseGetLastError(False), DLLStackCheck(False)]
    Private DeclareWide PtrSafe Function GetObjectW Lib "gdi32" (ByVal hObject As LongPtr, ByVal nCount As Long, ByRef lpObject As Any) As Long
    
    [UseGetLastError(False), DLLStackCheck(False)]
    Private Declare PtrSafe Function GdiAlphaBlend Lib "gdi32" (ByVal hDestDC As LongPtr, ByVal X As Long, ByVal Y As Long, ByVal nWidth As Long, ByVal nHeight As Long, ByVal hSrcDC As LongPtr, ByVal XSrc As Long, ByVal YSrc As Long, ByVal nWidthSrc As Long, ByVal nHeightSrc As Long, ByVal BlendFunc As LongPtr) As Long
    
    [IntegerOverflowChecks(False)]
    [FloatingPointErrorChecks(False)]
    [ArrayBoundsChecks(False)]
	Public Sub PictureRender(pic As IPicture, ByVal hdc As LongPtr, ByVal x As Long, ByVal y As Long, ByVal xs As Long, ByVal ys As Long, ByVal srcX As Long = -1, ByVal srcY As Long = -1, ByVal srcXS As Long = -1, ByVal srcYS As Long = -1, ByVal ForceAlphaTransparency As Boolean = False)
        Dim RenderFlag As Long = 0 ' FIXME cache this
        
        Dim picWidth As Long
        Dim picHeight As Long
        VB.ScaleOLEPictureDimensionsToPixels(vbPicTypeNone, pic.Width, picWidth, pic.Height, picHeight)
        If pic.Type = vbPicTypeIcon Then
            Const DI_NORMAL As Long = &H3
            If xs = 0 Then xs = picWidth
            If ys = 0 Then ys = picHeight
            DrawIconEx(hdc, x, y, pic.Handle, xs, ys, 0, vbNullPtr, DI_NORMAL)
        Else
           
            Dim HasAlpha As Boolean
            If ForceAlphaTransparency Then
                HasAlpha = True
            ElseIf pic.Type = vbPicTypeBitmap Then
                If RenderFlag = 0 Then
                    Const PICTURE_TRANSPARENT As Long = &H2
                    If (pic.Attributes And PICTURE_TRANSPARENT) = 0 Then ' Exclude GIF
                        Dim Bmp As BITMAP
                        GetObjectW pic.Handle, LenB(Bmp), Bmp
                        If Bmp.bmBitsPixel = 32 And Bmp.bmBits <> vbNullPtr Then
                            Set pic = CType(Of IPicture)(RuntimeCreatePremultipliedRGBABitmap32bpp(pic.Handle))
                            HasAlpha = True
                        End If
                    End If
                    If HasAlpha = False Then RenderFlag = 1 Else RenderFlag = 2
                ElseIf RenderFlag = 2 Then
                    HasAlpha = True
                End If
            End If
            
            Dim srcNotSupplied As Boolean = (srcX = -1 And srcY = -1 And srcXS = -1 And srcYS = -1)
            If HasAlpha = False Then
                If srcNotSupplied Then
                    srcX = 0
                    srcY = pic.Height
                    srcXS = pic.Width
                    srcYS = -pic.Height
                End If
                
                #If Win64 Then
                    Dim hDC32 As Long
                    GetMem4(VarPtr(hdc), hDC32)
                    pic.Render(hDC32, x, y, xs, ys, srcX, srcY, srcXS, srcYS, ByVal vbNullPtr)
                #Else
                    pic.Render(hdc, x, y, xs, ys, srcX, srcY, srcXS, srcYS, ByVal vbNullPtr)
                #End If
            Else
                If srcNotSupplied Then
                    srcX = 0
                    srcY = 0
                    srcXS = picWidth
                    srcYS = picHeight
                Else
                    VB.ScaleOLEPictureDimensionsToPixels(vbPicTypeNone, srcX, srcX, srcY, srcY)
                    VB.ScaleOLEPictureDimensionsToPixels(vbPicTypeNone, srcXS, srcXS, srcYS, srcYS)
                    
                    If srcYS < 0 Then
                        srcYS = -srcYS
                        srcY -= srcYS
                    End If
                End If
                
                Dim hDCBmp As LongPtr, hBmpOld As LongPtr
                hDCBmp = WinNativeFormsBASE.CreateCompatibleDC(vbNullPtr)
                If hDCBmp <> vbNullPtr Then
                    hBmpOld = WinNativeFormsBASE.SelectObject(hDCBmp, pic.Handle)
                    'Stop
                    GdiAlphaBlend(hdc, x, y, xs, ys, hDCBmp, srcX, srcY, srcXS, srcYS, &H1FF0000)
                    'Const SRCCOPY As Long = &H00CC0020
                    'WinNativeFormsBASE.BitBlt(hdc, x, y, xs, ys, hDCBmp, srcX, srcY, SRCCOPY)
                    
                    WinNativeFormsBASE.SelectObject(hDCBmp, hBmpOld)
                    WinNativeFormsBASE.DeleteDC(hDCBmp)
                End If
            End If
        End If
    End Sub

End Module