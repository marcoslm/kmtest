[InterfaceId("B29413AA-9A69-4E31-9F76-451CD6A8291C")]
Class DataFieldBinderBase
    Implements DataSourceListener
 
    Private IgnoreUpdates As Boolean
    Private BoundField As Object    ' e.g. DAO.Field
    Private InternalDataControl As Data
    Private IsDataBinderInitialized As Boolean
    Private InternalDataField As String
    Private InternalDataSource As DataSource

    [Unimplemented]
        Public DataFormat As StdDataFormat
    [Unimplemented]
        Public DataMember As String
        
    [Serialize(True, "DataField")]
        Friend DataFieldINIT As String
    [Serialize(True, "DataSource")]          ' Any string value is allowed, gets resolved at runtime to a Form.Controls(DataSourceName)
        Friend DataSourceINIT As String
    '[ Serialize (False) ]
    '[ Unimplemented ]
    '    Friend DataSource As DataSource         ' See DataSourceINIT
        
    [Serialize(False)]
        Public DataChanged As Boolean
    
    [Hidden] Event GetParent(out As Control)
    [Hidden] Event SetLiveValue(fieldValue As Variant)
    [Hidden] Event GetLiveValue(out As Variant)

    Private Sub DataSourceListener_dataMemberChanged(ByVal bstrDM As String) Implements DataSourceListener.dataMemberChanged
        Stop
    End Sub
    
    Private Sub DataSourceListener_dataMemberAdded(ByVal bstrDM As String) Implements DataSourceListener.dataMemberAdded
        Stop
    End Sub
    
    Private Sub DataSourceListener_dataMemberRemoved(ByVal bstrDM As String) Implements DataSourceListener.dataMemberRemoved
        Stop
    End Sub
    
    Friend Sub HandlesDataChanged() _
    	    Handles DataChanged.OnPropertyLet

        If DataChanged = True Then
        	Dim InternalDataControl As Any = Me.InternalDataControl
            If InternalDataControl IsNot Nothing Then
            	InternalDataControl.RecordsetIsDirty = True
            End If
        End If
    End Sub
    
    [Serialize(False)]
    Public Property Get DataField() As String
    	Return InternalDataField
    End Property
    
    [Serialize(False)]
    Public Property Let DataField(Value As String)
    	Dim InternalDataControl As Any = Me.InternalDataControl
        If InternalDataControl IsNot Nothing Then
            CType(Of TbDataControlPrivate)(InternalDataControl).RebindControl(Me, Value)
        End If
    	InternalDataField = Value
    End Property
    
    [Serialize(False)]
    Public Property Get DataSource() As DataSource
    	Return InternalDataSource
    End Property
    
    [Serialize(False)]
    Public Property Set DataSource(Value As DataSource)
    	Dim InternalDataSource As Any = Me.InternalDataSource
        If InternalDataSource IsNot Nothing Then
            InternalDataSource.removeDataSourceListener(Me)
        End If
        Set Me.InternalDataSource = Value
        Set Me.InternalDataControl = CType(Of Data)(Value)
        Set Me.BoundField = Nothing
        If Value IsNot Nothing Then
            Value.addDataSourceListener(Me)
            If Len(Me.DataField) > 0 Then
                If InternalDataControl IsNot Nothing Then
                    CType(Of TbDataControlPrivate)(InternalDataControl).RebindControl(Me, Me.DataField)
                End If
            End If
        End If
    End Property

    Friend Sub SetupBindings()
        InternalDataField = DataFieldINIT
        If Len(Me.DataSourceINIT) > 0 Then
            Dim Parent As Control
            RaiseEvent GetParent(Parent)

            Dim InternalDataControl As Any = Parent.Controls(Me.DataSourceINIT)
            Set Me.InternalDataControl = CType(Of Data)(InternalDataControl)
            Set Me.InternalDataSource = CType(Of DataSource)(InternalDataControl)
            Me.InternalDataSource.addDataSourceListener(Me)
        End If
        
        IsDataBinderInitialized = True
    End Sub
    
    Friend Sub OnBindComplete(BoundField As Object)
        Set Me.BoundField = BoundField
    End Sub
    
    Friend Sub ClearSource()
    	IgnoreUpdates = True
            RaiseEvent SetLiveValue(Null)
        IgnoreUpdates = False
        DataChanged = False
    End Sub
    
    Friend Sub SyncToSource()
        If BoundField Is Nothing Then Exit Sub
    	IgnoreUpdates = True
            RaiseEvent SetLiveValue(BoundField.Value)
        IgnoreUpdates = False
        DataChanged = False
    End Sub
    
    Friend Sub SaveChanges()
    	If DataChanged = True Then
            Dim currentValue As Variant
        	RaiseEvent GetLiveValue(currentValue)
            BoundField.Value = currentValue
            DataChanged = False
    	End If
    End Sub
    
    Friend Sub OnDataChanged()
        If (IgnoreUpdates = False) And (IsDataBinderInitialized = True) Then
            If DataChanged = False Then
                ' Stop
                DataChanged = True
                Dim InternalDataControl As Any = Me.InternalDataControl
                If InternalDataControl IsNot Nothing Then
                    InternalDataControl.RecordsetIsDirty = True
                End If
            End If
        End If
    End Sub
    
    Friend Sub InternalStateResetDataBinderBase()
        Me.IgnoreUpdates = False
        Set Me.BoundField = Nothing
        Set Me.InternalDataControl = Nothing
        Me.IsDataBinderInitialized = False
        Me.InternalDataField = vbNullString
        Set Me.InternalDataSource = Nothing
        Me.DataChanged = False
    End Sub
End Class