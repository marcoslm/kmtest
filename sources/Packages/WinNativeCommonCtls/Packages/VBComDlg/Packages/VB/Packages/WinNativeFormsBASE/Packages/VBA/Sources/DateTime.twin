Module DateTime
    
    [PreserveSig(False), UseGetLastError(False), DLLStackCheck(False)]
    [Description("Retrieves the value of the calendar property." & vbCrLf & _
                    "### Syntax" & vbCrLf & _
                    "`result = Calendar`" & vbCrLf & _
                    "### Return value" & vbCrLf & _
                    "A Long integer representing the calendar setting." & vbCrLf & _
                    "### Remarks" & vbCrLf & _
                    "The `Calendar` property gets the calendar value used by the application, " & _
                    "which may affect date calculations and formatting. The specific calendars " & _
                    "that can be represented are determined by the underlying system or application " & _
                    "API being called." & vbCrLf & _
                    "### Example" & vbCrLf & _
                    "```vb" & vbCrLf & _
                    "' Example: Getting the current calendar setting" & vbCrLf & _
                    "Dim currentCalendar As Long" & vbCrLf & _
                    "currentCalendar = Calendar" & vbCrLf & _
                    "MsgBox ""The current calendar setting is: "" & currentCalendar" & vbCrLf & _
                    "```")]
    Public DeclareWide PtrSafe Property Get Calendar Lib "<datetime>" Alias "#1" () As Long
    
    [PreserveSig(False), UseGetLastError(False), DLLStackCheck(False)]
    [Description("NOT YET IMPLEMENTED")]
    [Unimplemented]               ' FIXME not yet implemented
    Public DeclareWide PtrSafe Property Let Calendar Lib "<datetime>" Alias "#22" (ByVal Value As Long)
    
    [PreserveSig(False), UseGetLastError(False), DLLStackCheck(False)]
    [Description("Allows getting and setting of the system date as a String." & vbCrLf & _
                    "### Syntax" & vbCrLf & _
                    "`result = Date$` - Gets the current system date as a string.  " & vbCrLf & _
                    "`Date$ = value` - Sets the current system date using a string value." & vbCrLf & _
                    "### Parameters" & vbCrLf & _
                    "`value` (String): The date string to set as the system date." & vbCrLf & _
                    "### Return value" & vbCrLf & _
                    "When getting the date, it returns a String representation of the current system date.  " & vbCrLf & _
                    "When setting the date, it does not return a value." & vbCrLf & _
                    "### Remarks" & vbCrLf & _
                    "The `Date$` property is a convenient way to work with the system date as a string. " & _
                    "It is important to ensure that the date string format is correct and understood by the system " & _
                    "to avoid errors when setting the date." & vbCrLf & _
                    "### Examples" & vbCrLf & _
                    "```vb" & vbCrLf & _
                    "' Example 1: Getting the current system date" & vbCrLf & _
                    "Dim currentDate As String" & vbCrLf & _
                    "currentDate = Date$" & vbCrLf & _
                    "MsgBox ""The current system date is: "" & currentDate" & vbCrLf & vbCrLf & _
                    "  " & vbCrLf & _
                    "' Example 2: Setting the system date" & vbCrLf & _
                    "Date$ = ""01/01/2023""" & vbCrLf & _
                    "MsgBox ""The system date has been set to: "" & Date$" & vbCrLf & _
                    "```")]
    Public DeclareWide PtrSafe Property Get [Date$] Lib "<datetime>" Alias "#2" () As String
    
    [PreserveSig(False), UseGetLastError(False), DLLStackCheck(False)]
    [Description("Allows getting and setting of the system date as a String." & vbCrLf & _
                    "### Syntax" & vbCrLf & _
                    "`result = Date$` - Gets the current system date as a string.  " & vbCrLf & _
                    "`Date$ = value` - Sets the current system date using a string value." & vbCrLf & _
                    "### Parameters" & vbCrLf & _
                    "`value` (String): The date string to set as the system date." & vbCrLf & _
                    "### Return value" & vbCrLf & _
                    "When getting the date, it returns a String representation of the current system date.  " & vbCrLf & _
                    "When setting the date, it does not return a value." & vbCrLf & _
                    "### Remarks" & vbCrLf & _
                    "The `Date$` property is a convenient way to work with the system date as a string. " & _
                    "It is important to ensure that the date string format is correct and understood by the system " & _
                    "to avoid errors when setting the date." & vbCrLf & _
                    "### Examples" & vbCrLf & _
                    "```vb" & vbCrLf & _
                    "' Example 1: Getting the current system date" & vbCrLf & _
                    "Dim currentDate As String" & vbCrLf & _
                    "currentDate = Date$" & vbCrLf & _
                    "MsgBox ""The current system date is: "" & currentDate" & vbCrLf & vbCrLf & _
                    "  " & vbCrLf & _
                    "' Example 2: Setting the system date" & vbCrLf & _
                    "Date$ = ""01/01/2023""" & vbCrLf & _
                    "MsgBox ""The system date has been set to: "" & Date$" & vbCrLf & _
                    "```")]
    Public DeclareWide PtrSafe Property Let [Date$] Lib "<datetime>" Alias "#23" (ByVal Value As String)
       
    [PreserveSig(False), UseGetLastError(False), DLLStackCheck(False)]
    [Description("Allows getting and setting of the system date as a Variant." & vbCrLf & _
                    "### Syntax" & vbCrLf & _
                    "`result = Date` - Gets the current system date as a Variant.  " & vbCrLf & _
                    "`Date = value` - Sets the current system date using a string value." & vbCrLf & _
                    "### Parameters" & vbCrLf & _
                    "`value` (Variant): The date to set as the system date." & vbCrLf & _
                    "### Return value" & vbCrLf & _
                    "When getting the date, it returns a Variant representation of the current system date.  " & vbCrLf & _
                    "When setting the date, it does not return a value." & vbCrLf & _
                    "### Remarks" & vbCrLf & _
                    "The `Date` property is a convenient way to work with the system date as a Variant. " & _
                    "It is important to ensure that the date string format is correct and understood by the system " & _
                    "to avoid errors when setting the date." & vbCrLf & _
                    "### Examples" & vbCrLf & _
                    "```vb" & vbCrLf & _
                    "' Example 1: Getting the current system date" & vbCrLf & _
                    "Dim currentDate As Variant" & vbCrLf & _
                    "currentDate = Date" & vbCrLf & _
                    "MsgBox ""The current system date is: "" & currentDate" & vbCrLf & vbCrLf & _
                    "  " & vbCrLf & _
                    "' Example 2: Setting the system date" & vbCrLf & _
                    "Date = ""01/01/2023""" & vbCrLf & _
                    "MsgBox ""The system date has been set to: "" & Date" & vbCrLf & _
                    "```")]
    Public DeclareWide PtrSafe Property Get Date Lib "<datetime>" Alias "#3" () As Variant
        
    [PreserveSig(False), UseGetLastError(False), DLLStackCheck(False)]
    [Description("Allows getting and setting of the system date as a Variant." & vbCrLf & _
                    "### Syntax" & vbCrLf & _
                    "`result = Date` - Gets the current system date as a Variant.  " & vbCrLf & _
                    "`Date = value` - Sets the current system date using a string value." & vbCrLf & _
                    "### Parameters" & vbCrLf & _
                    "`value` (Variant): The date to set as the system date." & vbCrLf & _
                    "### Return value" & vbCrLf & _
                    "When getting the date, it returns a Variant representation of the current system date.  " & vbCrLf & _
                    "When setting the date, it does not return a value." & vbCrLf & _
                    "### Remarks" & vbCrLf & _
                    "The `Date` property is a convenient way to work with the system date as a Variant. " & _
                    "It is important to ensure that the date string format is correct and understood by the system " & _
                    "to avoid errors when setting the date." & vbCrLf & _
                    "### Examples" & vbCrLf & _
                    "```vb" & vbCrLf & _
                    "' Example 1: Getting the current system date" & vbCrLf & _
                    "Dim currentDate As Variant" & vbCrLf & _
                    "currentDate = Date" & vbCrLf & _
                    "MsgBox ""The current system date is: "" & currentDate" & vbCrLf & vbCrLf & _
                    "  " & vbCrLf & _
                    "' Example 2: Setting the system date" & vbCrLf & _
                    "Date = ""01/01/2023""" & vbCrLf & _
                    "MsgBox ""The system date has been set to: "" & Date" & vbCrLf & _
                    "```")]
    Public DeclareWide PtrSafe Property Let Date Lib "<datetime>" Alias "#24" (ByVal Value As Variant)
    
    [PreserveSig(False), UseGetLastError(False), DLLStackCheck(False)]
    [Description("Allows getting and setting of the system time as a String." & vbCrLf & _
                    "### Syntax" & vbCrLf & _
                    "`result = Time$` - Gets the current system time as a string.  " & vbCrLf & _
                    "`Time$ = value` - Sets the current system time using a string value.  " & vbCrLf & _
                    "### Parameters" & vbCrLf & _
                    "`value` (String): The time string to set as the system time." & vbCrLf & _
                    "### Return value" & vbCrLf & _
                    "When getting the time, it returns a String representation of the current system time.  " & vbCrLf & _
                    "When setting the time, it does not return a value.  " & vbCrLf & _
                    "### Remarks" & vbCrLf & _
                    "The `Time$` property is a convenient way to work with the system time as a string. " & _
                    "Ensure that the time string is in a correct format that the system can interpret." & vbCrLf & _
                    "### Examples" & vbCrLf & _
                    "```vb" & vbCrLf & _
                    "' Example 1: Getting the current system time" & vbCrLf & _
                    "Dim currentTime As String" & vbCrLf & _
                    "currentTime = Time$" & vbCrLf & _
                    "MsgBox ""The current system time is: "" & currentTime" & vbCrLf & vbCrLf & _
                    "  " & vbCrLf & _
                    "' Example 2: Setting the system time" & vbCrLf & _
                    "Time$ = ""12:34:56""" & vbCrLf & _
                    "MsgBox ""The system time has been set to: "" & Time$" & vbCrLf & _
                    "```")]
    Public DeclareWide PtrSafe Property Get [Time$] Lib "<datetime>" Alias "#4" () As String
    
    [PreserveSig(False), UseGetLastError(False), DLLStackCheck(False)]
    [Description("Allows getting and setting of the system time as a String." & vbCrLf & _
                    "### Syntax" & vbCrLf & _
                    "`result = Time$` - Gets the current system time as a string.  " & vbCrLf & _
                    "`Time$ = value` - Sets the current system time using a string value.  " & vbCrLf & _
                    "### Parameters" & vbCrLf & _
                    "`value` (String): The time string to set as the system time." & vbCrLf & _
                    "### Return value" & vbCrLf & _
                    "When getting the time, it returns a String representation of the current system time.  " & vbCrLf & _
                    "When setting the time, it does not return a value.  " & vbCrLf & _
                    "### Remarks" & vbCrLf & _
                    "The `Time$` property is a convenient way to work with the system time as a string. " & _
                    "Ensure that the time string is in a correct format that the system can interpret." & vbCrLf & _
                    "### Examples" & vbCrLf & _
                    "```vb" & vbCrLf & _
                    "' Example 1: Getting the current system time" & vbCrLf & _
                    "Dim currentTime As String" & vbCrLf & _
                    "currentTime = Time$" & vbCrLf & _
                    "MsgBox ""The current system time is: "" & currentTime" & vbCrLf & vbCrLf & _
                    "  " & vbCrLf & _
                    "' Example 2: Setting the system time" & vbCrLf & _
                    "Time$ = ""12:34:56""" & vbCrLf & _
                    "MsgBox ""The system time has been set to: "" & Time$" & vbCrLf & _
                    "```")]
    Public DeclareWide PtrSafe Property Let [Time$] Lib "<datetime>" Alias "#25" (ByVal Value As String)
    
    [PreserveSig(False), UseGetLastError(False), DLLStackCheck(False)]
    [Description("Allows getting and setting of the system time as a Variant." & vbCrLf & _
                    "### Syntax" & vbCrLf & _
                    "`result = Time` - Gets the current system time as a Variant.  " & vbCrLf & _
                    "`[Time] = value` - Sets the current system time using a Variant value.  " & vbCrLf & _
                    "### Parameters" & vbCrLf & _
                    "`value` (String): The time string to set as the system time." & vbCrLf & _
                    "### Return value" & vbCrLf & _
                    "When getting the time, it returns a Variant representation of the current system time.  " & vbCrLf & _
                    "When setting the time, it does not return a value.  " & vbCrLf & _
                    "### Remarks" & vbCrLf & _
                    "The `Time` property is a convenient way to work with the system time as a string. " & _
                    "Ensure that the time string is in a correct format that the system can interpret." & vbCrLf & _
                    "### Examples" & vbCrLf & _
                    "```vb" & vbCrLf & _
                    "' Example 1: Getting the current system time" & vbCrLf & _
                    "Dim currentTime As Variant" & vbCrLf & _
                    "currentTime = Time" & vbCrLf & _
                    "MsgBox ""The current system time is: "" & currentTime" & vbCrLf & vbCrLf & _
                    "  " & vbCrLf & _
                    "' Example 2: Setting the system time" & vbCrLf & _
                    "[Time] = ""12:34:56""" & vbCrLf & _
                    "MsgBox ""The system time has been set to: "" & Time" & vbCrLf & _
                    "```")]
    Public DeclareWide PtrSafe Property Get Time Lib "<datetime>" Alias "#5" () As Variant

    [PreserveSig(False), UseGetLastError(False), DLLStackCheck(False)]
    [Description("Allows getting and setting of the system time as a Variant." & vbCrLf & _
                    "### Syntax" & vbCrLf & _
                    "`result = Time` - Gets the current system time as a Variant.  " & vbCrLf & _
                    "`[Time] = value` - Sets the current system time using a Variant value.  " & vbCrLf & _
                    "### Parameters" & vbCrLf & _
                    "`value` (String): The time string to set as the system time." & vbCrLf & _
                    "### Return value" & vbCrLf & _
                    "When getting the time, it returns a Variant representation of the current system time.  " & vbCrLf & _
                    "When setting the time, it does not return a value.  " & vbCrLf & _
                    "### Remarks" & vbCrLf & _
                    "The `Time` property is a convenient way to work with the system time as a string. " & _
                    "Ensure that the time string is in a correct format that the system can interpret." & vbCrLf & _
                    "### Examples" & vbCrLf & _
                    "```vb" & vbCrLf & _
                    "' Example 1: Getting the current system time" & vbCrLf & _
                    "Dim currentTime As Variant" & vbCrLf & _
                    "currentTime = Time" & vbCrLf & _
                    "MsgBox ""The current system time is: "" & currentTime" & vbCrLf & vbCrLf & _
                    "  " & vbCrLf & _
                    "' Example 2: Setting the system time" & vbCrLf & _
                    "[Time] = ""12:34:56""" & vbCrLf & _
                    "MsgBox ""The system time has been set to: "" & Time" & vbCrLf & _
                    "```")]
    Public DeclareWide PtrSafe Property Let Time Lib "<datetime>" Alias "#26" (ByVal Value As Variant)
    
    [PreserveSig(False), UseGetLastError(False), DLLStackCheck(False)]
    [Description("Retrieves the number of seconds since midnight." & vbCrLf & _
                    "### Syntax" & vbCrLf & _
                    "`result = Timer`" & vbCrLf & _
                    "### Return value" & vbCrLf & _
                    "A Single representing the number of seconds elapsed since midnight." & vbCrLf & _
                    "### Example" & vbCrLf & _
                    "```vb" & vbCrLf & _
                    "Dim secs As Single" & vbCrLf & _
                    "secs = Timer" & vbCrLf & _
                    "MsgBox ""Seconds elapsed since midnight: "" & secs" & vbCrLf & _
                    "```")]
    Public DeclareWide PtrSafe Property Get Timer Lib "<datetime>" Alias "#6" () As Single

    [PreserveSig(False), UseGetLastError(False), DLLStackCheck(False)]
    [Description("Returns the current date and time." & vbCrLf & _
                    "### Syntax" & vbCrLf & _
                    "`result = Now`" & vbCrLf & _
                    "### Return value" & vbCrLf & _
                    "A Variant (Date) with the current date and time." & vbCrLf & _
                    "### Example" & vbCrLf & _
                    "```vb" & vbCrLf & _
                    "MsgBox ""The current date and time is: "" & Now" & vbCrLf & _
                    "```")]
    Public DeclareWide PtrSafe Property Get Now Lib "<datetime>" Alias "#7" () As Variant

    [PreserveSig(False), UseGetLastError(False), DLLStackCheck(False)]
    [Description("Calculates the difference between two dates." & vbCrLf & _
                    "### Syntax" & vbCrLf & _
                    "`result = DateDiff(Interval, Date1, Date2, [FirstDayOfWeek], [FirstWeekOfYear])`" & vbCrLf & _
                    "### Parameters" & vbCrLf & _
                    "`Interval` (String): The interval type to use for calculating the difference.  " & vbCrLf & _
                    "`Date1`, `Date2` (Variant): The two dates to compare.  " & vbCrLf & _
                    "`FirstDayOfWeek` (VbDayOfWeek): Optional. Specifies the first day of the week.  " & vbCrLf & _
                    "`FirstWeekOfYear` (VbFirstWeekOfYear): Optional. Specifies the first week of the year.  " & vbCrLf & _
                    "### Return value" & vbCrLf & _
                    "A Variant containing the difference between the two dates in the specified interval." & vbCrLf & _
                    "### Example" & vbCrLf & _
                    "```vb" & vbCrLf & _
                    "Dim diff As Variant" & vbCrLf & _
                    "diff = DateDiff(""d"", ""1/1/2023"", Now)" & vbCrLf & _
                    "MsgBox ""Days since the start of the year: "" & diff" & vbCrLf & _
                    "```")]
    Public DeclareWide PtrSafe Function DateDiff Lib "<datetime>" Alias "#8" (ByVal Interval As String, ByRef Date1 As Variant, ByRef Date2 As Variant, Optional ByVal FirstDayOfWeek As VbDayOfWeek = 1&, Optional ByVal FirstWeekOfYear As VbFirstWeekOfYear = 1&) As Variant
    
    [PreserveSig(False), UseGetLastError(False), DLLStackCheck(False), ConstantFoldableNumericsOnly]
    [Description("Retrieves the hour from a given time." & vbCrLf & _
                    "### Syntax" & vbCrLf & _
                    "`result = Hour(Time)`" & vbCrLf & _
                    "### Parameters" & vbCrLf & _
                    "`Time` (Variant): The time value from which to extract the hour." & vbCrLf & _
                    "### Return value" & vbCrLf & _
                    "A Variant containing the hour of the time specified." & vbCrLf & _
                    "### Example" & vbCrLf & _
                    "```vb" & vbCrLf & _
                    "MsgBox ""The current hour is: "" & Hour(Now)" & vbCrLf & _
                    "```")]
    Public DeclareWide PtrSafe Function Hour Lib "<datetime>" Alias "#9" (ByRef Time As Variant) As Variant
    
    [PreserveSig(False), UseGetLastError(False), DLLStackCheck(False), ConstantFoldableNumericsOnly]
    [Description("Extracts the day of the month from a given date." & vbCrLf & _
                    "### Syntax" & vbCrLf & _
                    "`result = Day(Date)`" & vbCrLf & _
                    "### Parameters" & vbCrLf & _
                    "`Date` (Variant): The date from which to extract the day of the month." & vbCrLf & _
                    "### Return value" & vbCrLf & _
                    "A Variant containing the day part of the specified date." & vbCrLf & _
                    "### Example" & vbCrLf & _
                    "```vb" & vbCrLf & _
                    "MsgBox ""The day of the month is: "" & Day(Date())" & vbCrLf & _
                    "```")]
                    
    Public DeclareWide PtrSafe Function Day Lib "<datetime>" Alias "#10" (ByRef Date As Variant) As Variant
    
    [PreserveSig(False), UseGetLastError(False), DLLStackCheck(False), ConstantFoldableNumericsOnly]
    [Description("Retrieves the minute component from a given time." & vbCrLf & _
                    "### Syntax" & vbCrLf & _
                    "`result = Minute(Time)`" & vbCrLf & _
                    "### Parameters" & vbCrLf & _
                    "`Time` (Variant): The time from which to extract the minute component." & vbCrLf & _
                    "### Return value" & vbCrLf & _
                    "A Variant containing the minute part of the specified time." & vbCrLf & _
                    "### Example" & vbCrLf & _
                    "```vb" & vbCrLf & _
                    "MsgBox ""The current minute is: "" & Minute(Now)" & vbCrLf & _
                    "```")]
                    
    Public DeclareWide PtrSafe Function Minute Lib "<datetime>" Alias "#11" (ByRef Time As Variant) As Variant
    
    [PreserveSig(False), UseGetLastError(False), DLLStackCheck(False), ConstantFoldableNumericsOnly]
    [Description("Extracts the month from a given date." & vbCrLf & _
                    "### Syntax" & vbCrLf & _
                    "`result = Month(Date)`" & vbCrLf & _
                    "### Parameters" & vbCrLf & _
                    "`Date` (Variant): The date from which to extract the month." & vbCrLf & _
                    "### Return value" & vbCrLf & _
                    "A Variant containing the month part of the specified date." & vbCrLf & _
                    "### Example" & vbCrLf & _
                    "```vb" & vbCrLf & _
                    "MsgBox ""The month number is: "" & Month(Date())" & vbCrLf & _
                    "```")]
    Public DeclareWide PtrSafe Function Month Lib "<datetime>" Alias "#12" (ByRef Date As Variant) As Variant
    
    [PreserveSig(False), UseGetLastError(False), DLLStackCheck(False), ConstantFoldableNumericsOnly]
    [Description("Retrieves the second component from a given time." & vbCrLf & _
                    "### Syntax" & vbCrLf & _
                    "`result = Second(Time)`" & vbCrLf & _
                    "### Parameters" & vbCrLf & _
                    "`Time` (Variant): The time from which to extract the second component." & vbCrLf & _
                    "### Return value" & vbCrLf & _
                    "A Variant containing the second part of the specified time." & vbCrLf & _
                    "### Example" & vbCrLf & _
                    "```vb" & vbCrLf & _
                    "MsgBox ""The current second is: "" & Second(Now)" & vbCrLf & _
                    "```")]
    Public DeclareWide PtrSafe Function Second Lib "<datetime>" Alias "#13" (ByRef Time As Variant) As Variant
    
    [PreserveSig(False), UseGetLastError(False), DLLStackCheck(False), ConstantFoldableNumericsOnly]
    [Description("Determines the day of the week for a given date." & vbCrLf & _
                    "### Syntax" & vbCrLf & _
                    "`result = Weekday(Date, [FirstDayOfWeek])`" & vbCrLf & _
                    "### Parameters" & vbCrLf & _
                    "`Date` (Variant): The date for which to find the day of the week.  " & vbCrLf & _
                    "`FirstDayOfWeek` (VbDayOfWeek): Optional. The first day of the week to use for calculation." & vbCrLf & _
                    "### Return value" & vbCrLf & _
                    "A Variant containing the weekday numeral of the specified date." & vbCrLf & _
                    "### Example" & vbCrLf & _
                    "```vb" & vbCrLf & _
                    "MsgBox ""The day of the week is: "" & Weekday(Date())" & vbCrLf & _
                    "```")]
    Public DeclareWide PtrSafe Function Weekday Lib "<datetime>" Alias "#14" (ByRef Date As Variant, Optional ByVal FirstDayOfWeek As VbDayOfWeek = VbDayOfWeek.vbSunday) As Variant
    
    [PreserveSig(False), UseGetLastError(False), DLLStackCheck(False), ConstantFoldableNumericsOnly]
    [Description("Extracts the year from a given date." & vbCrLf & _
                    "### Syntax" & vbCrLf & _
                    "`result = Year(Date)`" & vbCrLf & _
                    "### Parameters" & vbCrLf & _
                    "`Date` (Variant): The date from which to extract the year." & vbCrLf & _
                    "### Return value" & vbCrLf & _
                    "A Variant containing the year part of the specified date." & vbCrLf & _
                    "### Example" & vbCrLf & _
                    "```vb" & vbCrLf & _
                    "MsgBox ""The year is: "" & Year(Date())" & vbCrLf & _
                    "```")]
    Public DeclareWide PtrSafe Function Year Lib "<datetime>" Alias "#15" (ByRef Date As Variant) As Variant
    
    [PreserveSig(False), UseGetLastError(False), DLLStackCheck(False)]
    [Description("Converts a string representation of a time into a Variant of subtype Date." & vbCrLf & _
                    "### Syntax" & vbCrLf & _
                    "`result = TimeValue(Time)`" & vbCrLf & _
                    "### Parameters" & vbCrLf & _
                    "`Time` (String): The string expression representing the time." & vbCrLf & _
                    "### Return value" & vbCrLf & _
                    "A Variant of subtype Date containing the converted time." & vbCrLf & _
                    "### Example" & vbCrLf & _
                    "```vb" & vbCrLf & _
                    "MsgBox ""The time is: "" & TimeValue(""13:45:30"")" & vbCrLf & _
                    "```")]
    Public DeclareWide PtrSafe Function TimeValue Lib "<datetime>" Alias "#16" (ByVal Time As String) As Variant
    
    [PreserveSig(False), UseGetLastError(False), DLLStackCheck(False)]
    [Description("Converts a string representation of a date into a Variant of subtype Date." & vbCrLf & _
                    "### Syntax" & vbCrLf & _
                    "`result = DateValue(Date)`" & vbCrLf & _
                    "### Parameters" & vbCrLf & _
                    "`Date` (String): The string expression representing the date." & vbCrLf & _
                    "### Return value" & vbCrLf & _
                    "A Variant of subtype Date containing the converted date." & vbCrLf & _
                    "### Example" & vbCrLf & _
                    "```vb" & vbCrLf & _
                    "MsgBox ""The date is: "" & DateValue(""2023-11-03"")" & vbCrLf & _
                    "```")]
                    
    Public DeclareWide PtrSafe Function DateValue Lib "<datetime>" Alias "#17" (ByVal Date As String) As Variant
    
    [PreserveSig(False), UseGetLastError(False), DLLStackCheck(False), ConstantFoldableNumericsOnly]
    [Description("Returns a Variant of subtype Date representing the time for a specific hour, minute, and second." & vbCrLf & _
                    "### Syntax" & vbCrLf & _
                    "`result = TimeSerial(Hour, Minute, Second)`" & vbCrLf & _
                    "### Parameters" & vbCrLf & _
                    "`Hour` (Integer): The hour value.  " & vbCrLf & _
                    "`Minute` (Integer): The minute value.  " & vbCrLf & _
                    "`Second` (Integer): The second value.  " & vbCrLf & _
                    "### Return value" & vbCrLf & _
                    "A Variant of subtype Date representing the specified time." & vbCrLf & _
                    "### Example" & vbCrLf & _
                    "```vb" & vbCrLf & _
                    "MsgBox ""The time is: "" & TimeSerial(14, 30, 15)" & vbCrLf & _
                    "```")]
    Public DeclareWide PtrSafe Function TimeSerial Lib "<datetime>" Alias "#18" (ByVal Hour As Integer, ByVal Minute As Integer, ByVal Second As Integer) As Variant
    
    [PreserveSig(False), UseGetLastError(False), DLLStackCheck(False), ConstantFoldableNumericsOnly]
    [Description("Returns a Variant of subtype Date representing the date for a specific year, month, and day." & vbCrLf & _
                    "### Syntax" & vbCrLf & _
                    "`result = DateSerial(Year, Month, Day)`" & vbCrLf & _
                    "### Parameters" & vbCrLf & _
                    "`Year` (Integer): The year value.  " & vbCrLf & _
                    "`Month` (Integer): The month value.  " & vbCrLf & _
                    "`Day` (Integer): The day value.  " & vbCrLf & _
                    "### Return value" & vbCrLf & _
                    "A Variant of subtype Date representing the specified date." & vbCrLf & _
                    "### Example" & vbCrLf & _
                    "```vb" & vbCrLf & _
                    "MsgBox ""The date is: "" & DateSerial(2023, 11, 3)" & vbCrLf & _
                    "```")]
    Public DeclareWide PtrSafe Function DateSerial Lib "<datetime>" Alias "#19" (ByVal Year As Integer, ByVal Month As Integer, ByVal Day As Integer) As Variant
    
    [PreserveSig(False), UseGetLastError(False), DLLStackCheck(False)]
    [Description("Adds a specified time interval to a date or time and returns the result as a Variant of subtype Date." & vbCrLf & _
                    "### Syntax" & vbCrLf & _
                    "`result = DateAdd(Interval, Number, Date)`" & vbCrLf & _
                    "### Parameters" & vbCrLf & _
                    "`Interval` (String): The interval you want to add.  " & vbCrLf & _
                    "`Number` (Double): The number of intervals you want to add.  " & vbCrLf & _
                    "`Date` (Variant): The date to which the interval should be added.  " & vbCrLf & _
                    "### Return value" & vbCrLf & _
                    "A Variant of subtype Date with the interval added." & vbCrLf & _
                    "### Example" & vbCrLf & _
                    "```vb" & vbCrLf & _
                    "MsgBox ""The new date is: "" & DateAdd(""d"", 10, Date())" & vbCrLf & _
                    "```")]
    Public DeclareWide PtrSafe Function DateAdd Lib "<datetime>" Alias "#20" (ByVal Interval As String, ByVal Number As Double, ByRef Date As Variant) As Variant
    
    [PreserveSig(False), UseGetLastError(False), DLLStackCheck(False)]
    [Description("Returns a specified part of a given date as a Variant." & vbCrLf & _
                    "### Syntax" & vbCrLf & _
                    "`result = DatePart(Interval, Date, [FirstDayOfWeek], [FirstWeekOfYear])`" & vbCrLf & _
                    "### Parameters" & vbCrLf & _
                    "`Interval` (String): The part of the date to return.  " & vbCrLf & _
                    "`Date` (Variant): The date from which to extract the part.  " & vbCrLf & _
                    "`FirstDayOfWeek` (VbDayOfWeek): Optional. Specifies the first day of the week.  " & vbCrLf & _
                    "`FirstWeekOfYear` (VbFirstWeekOfYear): Optional. Specifies the first week of the year.  " & vbCrLf & _
                    "### Return value" & vbCrLf & _
                    "A Variant containing the specified part of the date." & vbCrLf & _
                    "### Example" & vbCrLf & _
                    "```vb" & vbCrLf & _
                    "MsgBox ""The day of the year is: "" & DatePart(""y"", Date())" & vbCrLf & _
                    "```")]
    Public DeclareWide PtrSafe Function DatePart Lib "<datetime>" Alias "#21" (ByVal Interval As String, ByRef Date As Variant, Optional ByVal FirstDayOfWeek As VbDayOfWeek = VbDayOfWeek.vbSunday, Optional ByVal FirstWeekOfYear As VbFirstWeekOfYear = VbFirstWeekOfYear.vbFirstJan1) As Variant
            
End Module